server {
    server_name www.{{ ansible_do_hostname }};
    listen 80;
    listen [::]:80;
    listen 443 ssl;
    listen [::]:443 ssl;
    include /etc/nginx/ssl.conf;
    return 301 $scheme://{{ ansible_do_hostname }}$request_uri;
}
server {
    server_name {{ ansible_do_hostname }};
    listen 80 default_server;
    listen [::]:80 default_server;
        location / {
            return 301 https://$host$request_uri;
        }
}
server {
    server_name {{ ansible_do_hostname }};
    listen 443 ssl http2 proxy_protocol default_server;
    listen [::]:443 ssl http2 proxy_protocol default_server;
    client_max_body_size 300M;
    include /etc/nginx/ssl.conf;
    include /etc/nginx/header.conf;
    location / {
       proxy_force_ranges on;
       proxy_read_timeout 300s;
	   proxy_pass http://127.0.0.1:8787;
    }
    location /favicon.ico { 
        access_log off; log_not_found off; 
    }
    location ~ ^/media_download/(.*?)/(.*?)/(.*) {
        internal;
        resolver 8.8.8.8 1.1.1.1 9.9.9.9 127.0.0.1 ipv6=off;
        set $download_protocol $1;
        set $download_host $2;
        set $download_path $3;
        set $download_url $download_protocol://$download_host/$download_path;
        proxy_set_header Host $download_host;
        proxy_set_header Authorization '';
        proxy_set_header Cookie '';
        proxy_hide_header x-amz-request-id;
        proxy_hide_header x-amz-id-2;
        proxy_cache media-files;
        proxy_cache_key $scheme$proxy_host$download_path;
        proxy_cache_valid 1440m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_revalidate on;
        proxy_ignore_headers Set-Cookie;
        add_header X-Cache-Status $upstream_cache_status;
        proxy_pass $download_url$is_args$args;
        proxy_intercept_errors on;
        error_page 301 302 307 = @handle_redirect;
    }
    location @handle_redirect {
        resolver 8.8.8.8 1.1.1.1 9.9.9.9 127.0.0.1 ipv6=off;
        set $saved_redirect_location '$upstream_http_location';
        proxy_pass $saved_redirect_location;
    }
}
